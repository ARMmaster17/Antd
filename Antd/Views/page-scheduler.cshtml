@*
///-------------------------------------------------------------------------------------
///     Copyright (c) 2014, Anthilla S.r.l. (http://www.anthilla.com)
///     All rights reserved.
///
///     Redistribution and use in source and binary forms, with or without
///     modification, are permitted provided that the following conditions are met:
///         * Redistributions of source code must retain the above copyright
///           notice, this list of conditions and the following disclaimer.
///         * Redistributions in binary form must reproduce the above copyright
///           notice, this list of conditions and the following disclaimer in the
///           documentation and/or other materials provided with the distribution.
///         * Neither the name of the Anthilla S.r.l. nor the
///           names of its contributors may be used to endorse or promote products
///           derived from this software without specific prior written permission.
///
///     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
///     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
///     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
///     DISCLAIMED. IN NO EVENT SHALL ANTHILLA S.R.L. BE LIABLE FOR ANY
///     DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
///     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
///     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
///     ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
///     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
///     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///
///     20141110
///-------------------------------------------------------------------------------------*@

@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>
@{Layout = "_layout.cshtml";}

@section MainContent {
    @functions{                
        public string[] DaysOfTheWeek = new string[] { 
            "Monday",
	        "Tuesday",
	        "Wednesday",
	        "Thursday",
	        "Friday",
	        "Saturday",
	        "Sunday"
        };

        public string[] MonthsOfTheYear = new string[] { 
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        };

        public string GetMonthNumber(string month) {
            int index = Array.IndexOf(MonthsOfTheYear, month);
            return (index + 1).ToString();
        }
    }

    <form action="/jobs" method="POST" enctype="multipart/form-data">
        <div class="grid" style="padding-left: 25px;">
            <div class="row">
                <div class="span2">
                    <label>Job Alias</label>
                </div>
                <div class="span10">
                    <input type="text" name="Alias">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Command</label>
                </div>
                <div class="span10">
                    <input type="text" name="Command">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Arguments</label>
                </div>
                <div class="span10">
                    <input type="text" name="Arguments">
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Start Time</label>
                </div>
                <div class="span10">
                    <select id="CronStartTimeHour">
                        @for (int i = 0; i < 24; i++) {
                            <option value="@i.ToString()" >@i.ToString() </option>
                        }
                    </select>
                    <select id="CronStartTimeMinute">
                        @for (int i = 0; i < 60; i++) {
                            <option value="@i.ToString()" >@i.ToString() </option>
                        }
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Minutes</label>
                </div>
                <div class="span10">
                    <p style="display: inline-block;">Every</p>
                    <input id="CronMinutes" type="text" />
                    <p style="display: inline-block;">minute(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Hours</label>
                </div>
                <div class="span10">
                    <p style="display: inline-block;">Every</p>
                    <input id="CronHours" type="text" />
                    <p style="display: inline-block;">hour(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Select Days</label>
                </div>
                <div class="span10">
                    <input name="CronDays" id="CronDaysPeriodic" type="radio" checked />
                    - 
                <p style="display: inline-block;">Every</p>
                    <input id="CronDays" type="text" value="1" />
                    <p style="display: inline-block;">day(s)</p>
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>&nbsp</label>
                </div>
                <div class="span10" id="CronDotW">
                    <input name="CronDays" id="CronDaysDaysOfWeek" type="radio" />
                    - 
                @foreach (string day in DaysOfTheWeek) {
                    <input class="cronDayOfTheWeek" type="checkbox" checked="checked" value="@day.Substring(0, 3).ToUpper()"/>
                    <p style="display: inline-block;">@day</p>
                }
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <label>Select Month</label>
                </div>
                <div class="span11" id="CronMotY">
                    @foreach (string month in MonthsOfTheYear) {
                        <input class="cronMonthOfTheYear" type="checkbox" checked="checked" value="@GetMonthNumber(month)"/>
                        <p style="display: inline-block;">@month</p>
                    }
                </div>
            </div>
            <div class="row">
                <div class="span2">
                    <input id="ShowCronResult" class="bg-yellow fg-white" type="button" value="Cron Result" style="width: 90%; height: 34px;" />
                </div>
                <div class="span10">
                    <input name="CronResult" id="CronResult" type="text" style="width: 90%; border-width: 0 0 2px 0 !important; border-color: lightgray !important;" />
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="span12">
                    <label>&nbsp</label>
                    <input id="submit" class="bg-blue fg-white" type="submit" value="Submit" style="width: 90%; height: 34px;">
                </div>
            </div>
        </div>
    </form>
    <br />
    <hr />
    <p>@Model.Message</p>
    <table id="Output" class="table">
        <thead>
            <tr>
                <th>Task</th>
                <th>Interval</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Antd.Scheduler.JobModel job in Model.JobList) {
                @functions{                
                    public string SetData(string json) {
                        string[] data = Newtonsoft.Json.JsonConvert.DeserializeObject<string[]>(json);
                        string d = String.Join(", ", data);
                        return d;
                    }
                }
                @if (job != null) {
<tr>
                        <td class="right">@SetData(job.Data)</td>
                        <td class="right">@job.Interval</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@section Scripts {
    <script type="text/javascript">
        $('#ShowCronResult').click(function () {
            var $defaults = {
                zero: '0',
                all: '*',
                what: '?'
            };
            var cronExpression;
            var seconds = $defaults.zero,
                minutes = $defaults.zero,
                hours = $defaults.zero,
                dayOfmonth = $defaults.all,
                month = $defaults.all,
                dayOfweek = $defaults.all;
            var $formatExample = '0 0/5 * * *'

            //controlla se c'è una periodicità nei minuti
            var periodMinutes = $('#CronMinutes').val();
            if (periodMinutes == '') {
                minutes = $('#CronStartTimeMinute').val();
            }
            else {
                minutes = '0/' + periodMinutes;
            }

            //controlla se c'è una periodicità nelle ore
            var periodHours = $('#CronHours').val();
            if (periodHours == '') {
                hours = $('#CronStartTimeHour').val();
            }
            else {
                hours = '0/' + periodHours;
            }

            //prima check il tipo di periodicità nei giorni
            if ($('#CronDaysPeriodic').prop('checked')) {
                dayOfweek = $defaults.what;
                //controlla se c'è una periodicità nei giorni
                var periodDays = $('#CronDays').val();
                if (periodDays == '') {
                    dayOfmonth = $defaults.what;
                }
                else {
                    dayOfmonth = '1/' + periodDays;
                }
            }
            if ($('#CronDaysDaysOfWeek').prop('checked')) {
                dayOfmonth = $defaults.what;
                var dayz = [];
                $('#CronDotW').find('.cronDayOfTheWeek:checked').each(function (index) {
                    dayz.push($(this).val());
                });
                dayOfweek = dayz.join(',');
            }

            var monthz = [];
            $('#CronMotY').find('.cronMonthOfTheYear:checked').each(function (index) {
                monthz.push($(this).val());
            });
            if (monthz.length == 0 || monthz.length == 12) {
                month = $defaults.all;
            }
            else {
                month = monthz.join(',');
            }

            cronExpression = seconds + ' ' + minutes + ' ' + hours + ' ' + dayOfmonth + ' ' + month + ' ' + dayOfweek;
            $('#CronResult').val(cronExpression);
        });
    </script>
}